* 비정상으로 종료되었을 때 서버 다시 시작하기!
  - forever 모듈을 주로 사용한다.
  - forever 모듈이 실행된 프로그램의 상태를 지속적으로 감시하기 때문에 가능.
  - 명령어 정리
    > forever start (ex_ app.js) : 노드 프로그램 실행
    > forever list : 실행 중인 노드 프로그램 목록 리스팅
    > forever restart (app.js) : 실행 중인 노드 프로그램을 다시 시작함. 소스 변경 시 사용.
    > forever stop (app.js) : 실행 중인 노드 프로그램 중지

  + supervisor 모듈도 주로 쓴다. 이건 소스가 바뀔 때마다 자동으로 재 시작함.
    대신 소스 파일을 잘못 바꾸면 실행 중인 프로그램이 오동작 한다는 걸 주의해야 함

* 클러스터링 : 하나의 프로그램을 여러 개의 프로세스로 실행하는 방법.
  - 노드에서는 pm2를 쓴다.
    원하는 개수 만큼 프로세스를 실행할 수 있고,
    필요한 경우 메모리 같은 시스템 리소스를 얼마나 사용하고 있는지 간단하게 모니터링 할 수 있음!

  # 특히 좋은 점은 성능을 끌어올리거나 클라이언트의 요청을 분산시킬 수 있다는 것이다.
  # pm2로 노드 프로그램을 실행할 때 -i 옵션을 붙이면 클러스터 모드에서 실행할 인스턴스의 개수가 정해지면서,
    클러스터 모드로 실행된다.

  - 명령어 정리
    > pm2 start (app.js --name web1) : 노드 프로그램 실행. --name을 붙이면 프로그램에 이름 부여.
    > pm2 list : 실행 중인 노드 프로그램 목록 리스팅
    > pm2 show (web1) : 실행 중인 노드 프로그램의 id나 name을 지정해 해당 정보를 보여줌.
    > pm2 restart (web1) : 실행 중인 노드 프로그램 다시 시작. 소스 변경 시 사용.
    > pm2 reload (web1) : 클러스터 모드를 사용할 때는 restart 보다 reload가 좋다. 다운타임 없이 서버 재시작 가능!
    > pm2 stop (web1) : 실행 중인 노드 프로그램 중지
    > pm2 delete (web1) : 노드 프로그램을 목록에서 삭제
    > pm2 monit : 인스턴스마다 CPU와 메모리 사용량이 표시됨
